!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module grdcrd ! in 
    interface  ! in :grdcrd
        subroutine grdcrd(d,nd,x,nx,flg) ! in :grdcrd:grdcrd.f90
            use constants, only: one,ione
            real*8 dimension(nd),intent(inout) :: d
            integer*4, optional,intent(in),check(len(d)>=nd),depend(d) :: nd=len(d)
            real*8 dimension(nx),intent(in) :: x
            integer*4, optional,intent(in),check(len(x)>=nx),depend(x) :: nx=len(x)
            integer*4 intent(in) :: flg
        end subroutine grdcrd
        function isrchf(nx1,x,y,flg) ! in :grdcrd:grdcrd.f90
            use constants, only: izero,ione
            integer*4, optional,intent(in),check(len(x)>=nx1),depend(x) :: nx1=len(x)
            real*8 dimension(nx1),intent(in) :: x
            real*8 intent(in) :: y
            integer*4 intent(in) :: flg
            integer*4 :: isrchf
        end function isrchf
        module constants ! in :grdcrd:constants.f90
            real*8, public :: rearth
            real*8, parameter,public,optional :: ttp=273.16
            real*8, parameter,public,optional :: four=4.0
            real*8 :: ozcon
            real*8, parameter,optional,depend(r1000) :: row=1000.0
            real*8, parameter,public,optional :: t0c=273.15
            real*8, parameter,public,optional :: cpf_c1=-2.376e-06
            real*8, parameter,public,optional :: cpf_c0=0.00019898
            real*8, parameter,public,optional,depend(row,one) :: rrow=0.001
            real*8, parameter,public,optional :: r100=100.0
            real*8, parameter,public,optional :: rhctop=0.85
            real*8, parameter,public,optional :: amsua_clw_d1=0.754
            real*8, parameter,public,optional :: r10=10.0
            real*8, parameter,public,optional :: r1000=1000.0
            real*8, parameter,public,optional :: five=5.0
            real*8, parameter,public,optional :: half=0.5
            real*8, public :: r60inv
            real*8, parameter,public,optional :: psv_c=33.93711047
            real*8, parameter,public,optional :: psv_b=-0.019121316
            real*8, parameter,public,optional :: psv_a=1.2378847e-05
            real*8, parameter,public,optional :: amsua_clw_d2=-2.265
            real*8, parameter,public,optional :: psv_d=-6343.1645
            real*8, parameter,public,optional :: cpf_e=-7.65e-09
            real*8, parameter,public,optional :: cpf_d=1.83e-11
            real*8, parameter,public,optional :: one_tenth=0.1
            real*8, public :: grav
            integer*4, public :: huge_i_kind
            real*8, parameter,optional :: semi_minor_axis=6356752.3142
            real*8, parameter,public,optional :: quarter=0.25
            real*8, parameter,public,optional,depend(one) :: cmr=3333.33333333
            real*8, parameter,public,optional :: pcpeff1=-0.639
            real*8, parameter,public,optional :: pcpeff0=1.591
            real*8, parameter,public,optional :: pcpeff3=-0.00496
            real*8, parameter,public,optional :: pcpeff2=0.0953
            real*8, parameter,public,optional :: r3600=3600.0
            real*8, parameter,public,optional :: ten=10.0
            real*8, parameter,public,optional :: rhcbot=0.85
            real*8, parameter,public,optional :: zero=0.0
            real*8, parameter,public,optional :: r60=60.0
            real*8, parameter,public,optional :: r2000=2000.0
            real*8 :: dldt
            real*8, parameter,public,optional :: ke2=2e-05
            real*8, parameter,public,optional,depend(cp,hvap) :: elocp=2488.55265777
            real*8, public :: rad2deg
            real*8 :: rv
            real*8, parameter,public,optional,depend(semi_minor_axis,one,grav_equator,grav_polar,semi_major_axis) :: somigliana=0.00193185263928
            real*8, parameter,public,optional :: psat=610.78
            real*8, parameter,public,optional :: cws=0.025
            real*8, public :: rd
            real*8, parameter,public,optional,depend(semi_minor_axis,semi_major_axis) :: flattening=0.00335281067183
            real*8, public :: rozcon
            real*8, parameter,public,optional,depend(quarter) :: wgtlim=0.25
            real*8, public :: rd_over_cp_mass
            real*8, parameter,optional :: jcal=4.1855
            real*8, public :: rd_over_g
            real*4, parameter,public,optional :: zero_single=0.0
            real*8, parameter,public,optional,depend(ttp) :: tmix=253.16
            integer*4, parameter,public,optional :: zero_ilong=0
            real*8, public :: el2orc
            real*8, public :: factor1
            real*8, public :: factor2
            real*8, public :: cg_term
            real*8, parameter,public,optional :: r400=400.0
            real*8, public :: rd_over_cp
            real*8, parameter,optional :: cvap=1846.0
            real*8, public :: epsm1
            real*8, public :: xb
            real*8, public :: xa
            real*8, parameter,public,optional :: one=1.0
            real*8, public :: huge_r_kind
            real*16, parameter,public,optional :: two_quad=2.0
            real*8, parameter,public,optional :: constoz=604229.0
            real*8, parameter,public,optional,depend(hvap,hfus) :: hsub=2833580.0
            real*8, parameter,public,optional :: cp=1004.6
            real*8 :: cv
            real*8, public :: deg2rad
            real*8, parameter,optional :: stndrd_atmos_ps=101325.0
            real*8, parameter,public,optional,depend(semi_minor_axis,earth_omega,grav_constant,semi_major_axis) :: grav_ratio=0.00344978650682
            real*8, public :: tpwcon
            real*8, parameter,public,optional,depend(one,cp) :: rcp=0.00099542106311
            real*8, parameter,public,optional :: two=2.0
            real*8, parameter,public,optional :: r2400=2400.0
            real*8, public :: xai
            real*4, public :: tiny_single
            real*8 :: eccentricity_linear
            real*8, parameter,public,optional :: cclimit=0.001
            real*8, public :: pi
            real*8, parameter,public,optional :: epsq=2e-12
            real*8, public :: sqrt_tiny_r_kind
            real*8, parameter,public,optional :: z_w_max=30.0
            real*8, parameter,optional :: csol=2106.0
            real*8, parameter,public,optional :: cpf_a1=-2.9331e-08
            real*8, parameter,public,optional :: cpf_a0=1.58123e-06
            real*8, parameter,public,optional :: cpf_a2=1.1043e-10
            integer*4, parameter,public,optional :: max_varname_length=12
            real*16, parameter,public,optional :: one_quad=1.0
            real*8, parameter,public,optional :: delta=0.6077338
            real*8, public :: eccentricity
            real*8, parameter,public,optional :: c0=0.002
            real*8, parameter,public,optional :: r4000=4000.0
            real*8, parameter,public,optional,depend(psat) :: psatk=0.61078
            real*4, public :: huge_single
            real*8, parameter,public,optional :: grav_equator=9.7803253359
            real*8, parameter,public,optional :: three=3.0
            real*8, parameter,public,optional,depend(one,dx_max,dx_min) :: dx_inv=-0.275912235518
            real*8, parameter,public,optional :: h300=300.0
            real*8, parameter,public,optional :: cpf_b0=5.707e-06
            real*8, parameter,public,optional :: cpf_b1=-2.051e-08
            real*8, parameter,public,optional :: ef_beta=3.14e-08
            real*8, parameter,optional :: earth_omega=7.292115e-05
            real*8, parameter,public,optional :: rearth_equator=6378136.62
            real*8, parameter,public,optional :: hvap=2500000.0
            integer*4, parameter,public,optional :: ione=1
            real*8, public :: n_a
            real*8, public :: n_b
            real*8, public :: n_c
            real*8, parameter,optional :: grav_constant=3.986004418e+14
            real*8, parameter,optional,depend(cvap,csol) :: dldti=-260.0
            integer*4, parameter,public,optional :: izero=0
            real*8, parameter,public,optional :: climit=1e-20
            real*16, parameter,public,optional :: zero_quad=0.0
            real*8 :: cliq
            real*8, parameter,public,optional :: ef_gamma=5.6e-07
            real*8, parameter,optional :: dx_max=-8.8818363
            real*8, public :: fv
            real*8, parameter,public,optional :: dx_min=-5.2574954
            real*8, public :: omeps
            real*8, parameter,public,optional :: r0_01=0.01
            real*8, parameter,public,optional :: r0_02=0.02
            real*8, parameter,public,optional :: r0_03=0.03
            real*8, parameter,public,optional :: r0_04=0.04
            real*8, parameter,public,optional :: r0_05=0.05
            real*8, parameter,optional :: grav_polar=9.8321849378
            real*8, parameter,public,optional :: ef_alpha=1.00062
            real*8, parameter,public,optional :: omega=7.2921e-05
            real*8, parameter,public,optional :: hfus=333580.0
            real*8, public :: g_over_rd
            real*8, parameter,public,optional,depend(r1000) :: h1000=1000.0
            real*8, public :: tiny_r_kind
            real*8, parameter,public,optional :: semi_major_axis=6378137.0
            real*8, public :: eps
            real*8, public :: xbi
            real*8, public :: cpr
            real*8 :: cp_mass
            subroutine init_constants_derived ! in :grdcrd:constants.f90:constants
            end subroutine init_constants_derived
            subroutine init_constants(regional) ! in :grdcrd:constants.f90:constants
                logical intent(in) :: regional
            end subroutine init_constants
            subroutine gps_constants(use_compress) ! in :grdcrd:constants.f90:constants
                logical intent(in) :: use_compress
            end subroutine gps_constants
        end module constants
    end interface 
end python module grdcrd

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
